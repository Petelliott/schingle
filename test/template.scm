(use-modules (schingle template)
             (sxml simple))

(define pcons (@@ (schingle template) pcons))
(define-test (schingle template pcons)
  (equal? (pcons '()) '())
  (equal? (pcons '() '(1 . 2) '(2 . 3)) '((2 . 3) (1 . 2)))
  (equal? (pcons '() '(1 . 2) '(2 . 3) '(4 . 5))
          '((4 . 5) (2 . 3) (1 . 2))))

(define bind-tag (@@ (schingle template) bind-tag))
(bind-tag 'a 5)
(bind-tag 'b (lambda (body) body))
(define-test (schingle template bind-tag)
  (equal? (tag-ref 'a) 5)
  (procedure? (tag-ref 'b))
  (equal? (tag-ref 'c) #f))

(define-tag d 6)
(define-tag (e body) body)
(define-test (schingle template define-tag)
  (equal? (tag-ref 'd) 6)
  (procedure? (tag-ref 'e))
  (equal? (tag-ref 'f) #f))

(define-test (schingle template tag-let)
  (tag-let ((g 5))
    (equal? (tag-ref 'g) 5)
    (equal? (tag-ref 'h) #f))
  (equal? (tag-ref 'a) 5)
  (tag-let ((a 6))
    (equal? (tag-ref 'a) 6))
  (equal? (tag-ref 'a) 5))
